name: Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release artifacts
        run: cargo build --locked --release

      - name: Verify and publish GitHub release
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"

          $artifact = "target/release/httpc.dll"
          if (-not (Test-Path $artifact)) {
            throw "Expected artifact '$artifact' was not found."
          }

          $releaseTitle = "HTTPC Requester $env:TAG_NAME"
          $isPrerelease = -not ($env:TAG_NAME -match '^[vV]\d+\.\d+\.\d+$')
          $assets = @($artifact)

          $releaseExists = $false
          $prevErrorActionPreference = $ErrorActionPreference
          $ErrorActionPreference = "Continue"
          gh release view $env:TAG_NAME 2>&1
          if ($LASTEXITCODE -eq 0) {
            $releaseExists = $true
          }
          $ErrorActionPreference = $prevErrorActionPreference

          if ($releaseExists) {
            foreach ($asset in $assets) {
              gh release upload $env:TAG_NAME $asset --clobber
            }
            if ($isPrerelease) {
              gh release edit $env:TAG_NAME --title $releaseTitle --prerelease
            } else {
              gh release edit $env:TAG_NAME --title $releaseTitle --prerelease=false
            }
          } else {
            $args = @($env:TAG_NAME) + $assets + @("--title", $releaseTitle, "--generate-notes")
            if ($isPrerelease) { $args += "--prerelease" }
            gh release create @args
          }
